# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        cd api-gateway-service
        mvn clean package
        cd ../service-registry
        mvn clean package
        cd ../user-service
        mvn clean package
    - name: Build & push Docker image for Service Registry
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
          image: jaimodi/service_registry_img
          tags: latest
          registry: docker.io
          dockerfile: ./service-registry/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build & push Docker image for API Gateway Service
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
          image: jaimodi/api_gateway_service_img
          tags: latest
          registry: docker.io
          dockerfile: ./api-gateway-service/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build & push Docker image for User Service
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
          image: jaimodi/user_service_img
          tags: latest
          registry: docker.io
          dockerfile: ./user-service/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    
